package kr.co.khj;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.springframework.stereotype.Repository;
import org.springframework.web.multipart.MultipartFile;

@Repository("cdn_model")
public class cdn_model {
	//FTP 정보를 외부에서 수정되지 않도록 설정
	final String user = "testuser";
	final String pass = "a1004a1004!";
	final int port = 21;
	
	FTPClient fc = null;
	FTPClientConfig fcc = null;
	
	boolean result = false; //FTP 전성 결과 true(업로드 정상), false(업로드 실패)
	
	//CDN Server로 해당 파이을 전송하는 역할을 담당한 model
	public boolean cdn_ftp(MultipartFile files, String url) throws Exception{
		try {
			//신규파일명
			String new_file = rename_file(files.getOriginalFilename());
			this.fc = new FTPClient();
			this.fc.setControlEncoding("utf-8");
			this.fcc = new FTPClientConfig();
			
			this.fc.configure(fcc);
			this.fc.connect(url, this.port); //FTP 연결
			if(this.fc.login(this.user, this.pass)) {
				this.fc.setFileType(FTP.BINARY_FILE_TYPE);
				this.result = this.fc.storeFile("/nankim/"+new_file,  files.getInputStream());
			}
		}catch (Exception e) {
			
		}finally {
			this.fc.disconnect();
		}
		return false;
	}
	
	//실제 파일명을 개발자가 원하는 이름으로 변경하는 메소드
	public String rename_file(String ori_file) {
		//오늘날짜 + 시분초
		Date today = new Date();
		SimpleDateFormat sf = new SimpleDateFormat("yyyyMMddHHmmss");
		String day = sf.format(today);
		
		//숫자 하나 임의로 셋팅
		int no = (int)Math.ceil(Math.random()*10);
		
		//파일의 속성명만 출력
		String type = ori_file.substring(ori_file.lastIndexOf(".")+1);
		
		//개발자가 원하는 파일명으로 변경완료
		String new_file = day + no +type;
			
		return new_file;
	}
}
