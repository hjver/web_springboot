package kr.co.khj;

import java.io.PrintWriter;
import java.util.List;

import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPClientConfig;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.resource.HttpResource;

import jakarta.annotation.Resource;
import jakarta.servlet.http.HttpServletResponse;

@Controller
public class main_controller {
	Logger log = LoggerFactory.getLogger(this.getClass());
	
	PrintWriter pw = null;
	
	@Resource(name="membership_dto")
	membership_dto dto;
	
	@Autowired
	private membership_service ms; //interface를 로드
	
	/*
	@Autowired
	private membership_service2 ms2;  //@Service의 class 로드
	*/
	
	@Resource(name="membership_service2")
	membership_service2 ms2;
	
	//CND 서버로 이미지 및 컨텥츠 파일 전송 메소드
	@PostMapping("/cdn_uploadok.do")
	public String cdn_server(@RequestParam(name="mfile", defaultValue = "") MultipartFile mfile) {
		this.log.info(mfile.getOriginalFilename());
	
		//FTP 서버에 접속을 하는 역할을 하는 라이브러리를 호출
		FTPClient ftp = new FTPClient();  //CDN 서버연결
		ftp.setControlEncoding("utf-8");  //CDN 연결시 파일전송 언어셋
		
		//FTP접속 정보를 배열로 저장시키는 라이브러리
		FTPClientConfig cf = new FTPClientConfig();
		try {
			//Front-end가 전송한 파일명을 저장
			String filenm = mfile.getOriginalFilename();
			String host = "http://nankim.dothome.co.kr/"; //CDN 접속 URL
			//FTP 정보
			String user = "nankim";
			String pass = "a10041004!";
			int port = 21;  //ftp 접속 포트번호
			ftp.configure(cf);
			ftp.connect(host, port);
			
		}catch (Exception e) {
			this.log.info(e.toString());
		}finally {
			try {
				ftp.disconnect();  //ftp 접속 종료
			}catch (Exception e) {
				
			}
		}
		return null;
	}
	
	
	
	@RequestMapping(value={"/join.do","/join"}, method=RequestMethod.POST)
	public String join(@ModelAttribute("cp") membership_dto dto2,
			HttpServletResponse res) {
		res.setContentType("text/html;charset=utf-8");
		try {
			this.pw = res.getWriter();
			int result = this.ms.join_member(dto2);
			this.log.info("테스트");
			this.log.info(String.valueOf(result));
			if(result > 0) {
				this.pw.print("<script>"
						+ "alert('신규회원 가입되었습니다.');"
						+ "location.href='./login.do';"
						+ "</script");
			}else {
				this.pw.print("<script>"
						+ "alert('시스템 오류로 가입이 죄지 않았습니다.');"
						+ "history.go(-1);"
						+ "</script");
		}
		}catch (Exception e) {
			this.log.info(e.toString());
		}finally {
			this.pw.close();
		}
		
		return null;
	}
	
	@GetMapping("/index2.do")
	public String index2(Model m) {
		String mid = "nankim";
		List<membership_dto> one = this.ms2.onedata(mid);
		this.log.info(one.get(0).getMNAME().toString());
		return null;
	}
	
	
	@GetMapping("/index.do")
	public String index(Model m) {
		this.dto.getMIDX();
		String username="홍길동";
		
		List<membership_dto> all = this.ms.alldata();
		this.log.info(all.get(0).getMNAME().toString());
		//System.out.println(all.size());
		m.addAttribute("username", username);
		return null;
	}
}
