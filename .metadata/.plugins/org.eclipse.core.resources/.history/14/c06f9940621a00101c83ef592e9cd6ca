package kr.co.khj;

import java.io.PrintWriter;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import jakarta.annotation.Resource;
import jakarta.servlet.ServletResponse;

//CDN 전용 컨트롤러
@Controller
public class cdn_controller {

	Logger log = LoggerFactory.getLogger(this.getClass());
	
	//@Resource로 Controller에서 호출과 Model에서 호출은 각각 새로운 빈으로 각각 다름
	@Resource(name="file_DTO")
	file_DTO file_DTO;
	
	@Resource(name="cdn_model")
	cdn_model cdn_model;
	
	PrintWriter pw = null;
	
	@GetMapping("/cdn/cdn_filelist.do")
	public String cdn_filelist() {
		
		return null;
	}
		
	//CDN Server로 파일 전송 및 DB 저장
	@PostMapping("/cdn/cdn_fileok.do")
	public String cdn_fileok(@RequestParam(name="mfile") MultipartFile mfile[],
			@RequestParam(name="url") String url, ServletResponse res
			) throws Exception{
		
		boolean result = this.cdn_model.cdn_ftp(mfile[0], url);
		res.setContentType("text/html;charset=utf-8");
		this.pw = res.getWriter();
		if(result == true) {
			this.pw.print("<script>"
					+ "alert('정상적으로 등록 완료 되었습니다.');"
					+ "location.href='./cdn_filelist.do';"
					+ "</script>");
		}
		else {
			this.pw.print("<script>"
					+ "alert('올바르게 저장되지 않았습니다.');"
					+ "history.go(-1);"
					+ "</script>");
		}

		return null;
	}
}
